""" 
üîñ B√ÄI 1
  - Gi·∫£ s·ª≠ c√≥ 9 cu·ªôc m√≠t-tinh: A, B, C, D, E, F, G, H, I dc t·ªï ch·ª©c. C√°c cu·ªôc m√≠t-tinh:
AE, BC, CD, ED, ABD, AHI, BHI, DFI, DHI, FGH ko dc t·ªï  ch·ª©c ƒë·ªìng th·ªùi. 
  üëâ H√£y s·ª≠ d·ª•ng thu·∫≠t to√°n t√¥ m√†u t·ªëi ∆∞u ƒë·ªÉ b·ªë tr√≠ c√°c cu·ªôc m√≠t-tinh v√†o √≠t bu·ªïi nh·∫•t.

üîñ B√ÄI 2
  - M·ªôt giao l·ªô g·ªìm 13 tuy·∫øn ƒë∆∞·ªùng: AB, AC, AD, BA, BC, BD, DA, DB, DC, EA, EB, EC,
ED.
    - C√°c tuy·∫øn giao nhau: EC, AD, DA / EB, AC, AD, DA / AC, EB, BD, DB
    - C√°c tuy·∫øn ng∆∞·ª£c nhau: AB, BC / ED, DC / EA, AB
    - BA, DC, ED ko giao vs c√°c tuy·∫øn kh√°c.
    - C√°c tuy·∫øn c√πng ƒë·ªânh xu·∫•t ph√°t ho·∫∑c c√πng ƒë√≠ch th√¨ ko giao nhau: ED, EA / BC, BA
/ BC, DC / BA, EA 
    - Song song th√¨ ko giao nhau.
  üëâ T√¨m s·ªë ƒë√®n giao th√¥ng t·ªëi thi·ªÉu c·∫ßn ƒë·∫∑t.
"""


from module import *
import numpy as np

""" --------------------------------------------------------------------- B√ÄI 1 """
""" matrix1 = np.array([
    (0, 1, 0, 1, 1, 0, 0, 1, 1),
    (1, 0, 1, 1, 0, 0, 0, 1, 1),
    (0, 1, 0, 1, 0, 0, 0, 0, 0),
    (1, 1, 1, 0, 1, 1, 0, 1, 1),
    (1, 0, 0, 1, 0, 0, 0, 0, 0),
    (0, 0, 0, 1, 0, 0, 1, 1, 1),
    (0, 0, 0, 0, 0, 1, 0, 1, 0),
    (1, 1, 0, 1, 0, 1, 1, 0, 1),
    (1, 1, 0, 1, 0, 1, 0, 1, 0)
])


m = VertexColoring(matrix1)
color_map = m.heuristic2()

print(color_map) """

matrix2 = np.array([
  (0, 0, 0,	0, 1,	0, 0,	0, 0,	1, 0,	0, 0),
  (0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0),
  (0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0),
  (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  (0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
  (0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0),
  (0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0),
  (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1),
  (1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  (0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0),
  (0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
  (0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0)
])

m = VertexColoring(matrix2)
color_map = m.heuristic2()

print(color_map)
